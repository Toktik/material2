{"version":3,"file":"progress-bar.spec.js","sourceRoot":"","sources":["file:///C:/projects/material2/tmp/broccoli_type_script_compiler-input_base_path-2PVWyBBf.tmp/0/src/demo-app/components/progress-bar/progress-bar.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {inject} from '@angular/core/testing';\r\nimport {TestComponentBuilder} from '@angular/compiler/testing';\r\nimport {Component} from '@angular/core';\r\nimport {By} from '@angular/platform-browser';\r\nimport {MdProgressBar} from './progress-bar';\r\n\r\n\r\ndescribe('MdProgressBar', () => {\r\n  let builder: TestComponentBuilder;\r\n\r\n  beforeEach(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\r\n    builder = tcb;\r\n  }));\r\n\r\n  it('should apply a mode of \"determinate\" if no mode is provided.', (done: () => void) => {\r\n    builder\r\n      .overrideTemplate(TestApp, '<md-progress-bar></md-progress-bar>')\r\n      .createAsync(TestApp)\r\n      .then((fixture) => {\r\n        fixture.detectChanges();\r\n        let progressElement = fixture.debugElement.query(By.css('md-progress-bar'));\r\n        expect(progressElement.componentInstance.mode).toBe('determinate');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('should not modify the mode if a valid mode is provided.', (done: () => void) => {\r\n    builder\r\n      .overrideTemplate(TestApp, '<md-progress-bar mode=\"buffer\"></md-progress-bar>')\r\n      .createAsync(TestApp)\r\n      .then((fixture) => {\r\n        fixture.detectChanges();\r\n        let progressElement = fixture.debugElement.query(By.css('md-progress-bar'));\r\n        expect(progressElement.componentInstance.mode).toBe('buffer');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('should define default values for value and bufferValue attributes', (done: () => void) => {\r\n    builder\r\n      .overrideTemplate(TestApp, '<md-progress-bar></md-progress-bar>')\r\n      .createAsync(TestApp)\r\n      .then((fixture) => {\r\n        fixture.detectChanges();\r\n        let progressElement = fixture.debugElement.query(By.css('md-progress-bar'));\r\n        expect(progressElement.componentInstance.value).toBe(0);\r\n        expect(progressElement.componentInstance.bufferValue).toBe(0);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('should clamp value and bufferValue between 0 and 100', (done: () => void) => {\r\n    builder\r\n      .overrideTemplate(TestApp, '<md-progress-bar></md-progress-bar>')\r\n      .createAsync(TestApp)\r\n      .then((fixture) => {\r\n        fixture.detectChanges();\r\n        let progressElement = fixture.debugElement.query(By.css('md-progress-bar'));\r\n        let progressComponent = progressElement.componentInstance;\r\n\r\n        progressComponent.value = 50;\r\n        expect(progressComponent.value).toBe(50);\r\n\r\n        progressComponent.value = 999;\r\n        expect(progressComponent.value).toBe(100);\r\n\r\n        progressComponent.value = -10;\r\n        expect(progressComponent.value).toBe(0);\r\n\r\n        progressComponent.bufferValue = -29;\r\n        expect(progressComponent.bufferValue).toBe(0);\r\n\r\n        progressComponent.bufferValue = 9;\r\n        expect(progressComponent.bufferValue).toBe(9);\r\n\r\n        progressComponent.bufferValue = 1320;\r\n        expect(progressComponent.bufferValue).toBe(100);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('should return the transform attribute for bufferValue and mode', (done: () => void) => {\r\n    builder\r\n      .overrideTemplate(TestApp, '<md-progress-bar></md-progress-bar>')\r\n      .createAsync(TestApp)\r\n      .then((fixture) => {\r\n        fixture.detectChanges();\r\n        let progressElement = fixture.debugElement.query(By.css('md-progress-bar'));\r\n        let progressComponent = progressElement.componentInstance;\r\n\r\n        expect(progressComponent._primaryTransform()).toEqual({ transform: 'scaleX(0)' });\r\n        expect(progressComponent._bufferTransform()).toBe(undefined);\r\n\r\n        progressComponent.value = 40;\r\n        expect(progressComponent._primaryTransform()).toEqual({ transform: 'scaleX(0.4)' });\r\n        expect(progressComponent._bufferTransform()).toBe(undefined);\r\n\r\n        progressComponent.value = 35;\r\n        progressComponent.bufferValue = 55;\r\n        expect(progressComponent._primaryTransform()).toEqual({ transform: 'scaleX(0.35)' });\r\n        expect(progressComponent._bufferTransform()).toBe(undefined);\r\n\r\n        progressComponent.mode = 'buffer';\r\n        expect(progressComponent._primaryTransform()).toEqual({ transform: 'scaleX(0.35)' });\r\n        expect(progressComponent._bufferTransform()).toEqual({ transform: 'scaleX(0.55)' });\r\n\r\n\r\n        progressComponent.value = 60;\r\n        progressComponent.bufferValue = 60;\r\n        expect(progressComponent._primaryTransform()).toEqual({ transform: 'scaleX(0.6)' });\r\n        expect(progressComponent._bufferTransform()).toEqual({ transform: 'scaleX(0.6)' });\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n\r\n/** Test component that contains an MdButton. */\r\n@Component({\r\n  directives: [MdProgressBar],\r\n  template: '',\r\n})\r\nclass TestApp {\r\n}\r\n"]}