{"version":3,"file":"checkbox.spec.js","sourceRoot":"","sources":["file:///C:/projects/material2/tmp/broccoli_type_script_compiler-input_base_path-2PVWyBBf.tmp/0/src/demo-app/components/checkbox/checkbox.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    addProviders,\r\n    inject,\r\n    async,\r\n    fakeAsync,\r\n    flushMicrotasks\r\n} from '@angular/core/testing';\r\nimport {\r\n    FORM_DIRECTIVES,\r\n    NgModel,\r\n    NgControl,\r\n    disableDeprecatedForms,\r\n    provideForms\r\n} from '@angular/forms';\r\nimport {TestComponentBuilder, ComponentFixture} from '@angular/compiler/testing';\r\nimport {Component, DebugElement} from '@angular/core';\r\nimport {By} from '@angular/platform-browser';\r\nimport {MdCheckbox, MdCheckboxChange} from './checkbox';\r\n\r\n\r\n\r\n// TODO: Implement E2E tests for spacebar/click behavior for checking/unchecking\r\n\r\ndescribe('MdCheckbox', () => {\r\n  let builder: TestComponentBuilder;\r\n  let fixture: ComponentFixture<any>;\r\n\r\n  beforeEach(() => {\r\n    addProviders([\r\n      disableDeprecatedForms(),\r\n      provideForms(),\r\n    ]);\r\n  });\r\n\r\n  beforeEach(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\r\n    builder = tcb;\r\n  }));\r\n\r\n  describe('basic behaviors', () => {\r\n    let checkboxDebugElement: DebugElement;\r\n    let checkboxNativeElement: HTMLElement;\r\n    let checkboxInstance: MdCheckbox;\r\n    let testComponent: SingleCheckbox;\r\n    let inputElement: HTMLInputElement;\r\n    let labelElement: HTMLLabelElement;\r\n\r\n    beforeEach(async(() => {\r\n      builder.createAsync(SingleCheckbox).then(f => {\r\n        fixture = f;\r\n        fixture.detectChanges();\r\n\r\n        checkboxDebugElement = fixture.debugElement.query(By.directive(MdCheckbox));\r\n        checkboxNativeElement = checkboxDebugElement.nativeElement;\r\n        checkboxInstance = checkboxDebugElement.componentInstance;\r\n        testComponent = fixture.debugElement.componentInstance;\r\n        inputElement = <HTMLInputElement>checkboxNativeElement.querySelector('input');\r\n        labelElement = <HTMLLabelElement>checkboxNativeElement.querySelector('label');\r\n      });\r\n    }));\r\n\r\n    it('should add and remove the checked state', () => {\r\n      expect(checkboxInstance.checked).toBe(false);\r\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-checked');\r\n      expect(inputElement.checked).toBe(false);\r\n\r\n      testComponent.isChecked = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxInstance.checked).toBe(true);\r\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-checked');\r\n      expect(inputElement.checked).toBe(true);\r\n\r\n      testComponent.isChecked = false;\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxInstance.checked).toBe(false);\r\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-checked');\r\n      expect(inputElement.checked).toBe(false);\r\n    });\r\n\r\n    it('should add and remove indeterminate state', () => {\r\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-checked');\r\n      expect(inputElement.checked).toBe(false);\r\n      expect(inputElement.indeterminate).toBe(false);\r\n\r\n      testComponent.isIndeterminate = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-indeterminate');\r\n      expect(inputElement.checked).toBe(false);\r\n      expect(inputElement.indeterminate).toBe(true);\r\n\r\n      testComponent.isIndeterminate = false;\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-indeterminate');\r\n      expect(inputElement.checked).toBe(false);\r\n      expect(inputElement.indeterminate).toBe(false);\r\n    });\r\n\r\n    it('should toggle checked state on click', () => {\r\n      expect(checkboxInstance.checked).toBe(false);\r\n\r\n      labelElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxInstance.checked).toBe(true);\r\n\r\n      labelElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxInstance.checked).toBe(false);\r\n    });\r\n\r\n    it('should change from indeterminate to checked on click', () => {\r\n      testComponent.isChecked = false;\r\n      testComponent.isIndeterminate = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxInstance.checked).toBe(false);\r\n      expect(checkboxInstance.indeterminate).toBe(true);\r\n\r\n      checkboxInstance._onInteractionEvent(<Event>{stopPropagation: () => {}});\r\n\r\n      expect(checkboxInstance.checked).toBe(true);\r\n      expect(checkboxInstance.indeterminate).toBe(false);\r\n\r\n      checkboxInstance._onInteractionEvent(<Event>{stopPropagation: () => {}});\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxInstance.checked).toBe(false);\r\n      expect(checkboxInstance.indeterminate).toBe(false);\r\n    });\r\n\r\n    it('should add and remove disabled state', () => {\r\n      expect(checkboxInstance.disabled).toBe(false);\r\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-disabled');\r\n      expect(inputElement.tabIndex).toBe(0);\r\n      expect(inputElement.disabled).toBe(false);\r\n\r\n      testComponent.isDisabled = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxInstance.disabled).toBe(true);\r\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-disabled');\r\n      expect(inputElement.disabled).toBe(true);\r\n\r\n      testComponent.isDisabled = false;\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxInstance.disabled).toBe(false);\r\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-disabled');\r\n      expect(inputElement.tabIndex).toBe(0);\r\n      expect(inputElement.disabled).toBe(false);\r\n    });\r\n\r\n    it('should not toggle `checked` state upon interation while disabled', () => {\r\n      testComponent.isDisabled = true;\r\n      fixture.detectChanges();\r\n\r\n      checkboxNativeElement.click();\r\n      expect(checkboxInstance.checked).toBe(false);\r\n    });\r\n\r\n    it('should overwrite indeterminate state when checked is re-set', () => {\r\n      testComponent.isIndeterminate = true;\r\n      fixture.detectChanges();\r\n\r\n      testComponent.isChecked = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxInstance.checked).toBe(true);\r\n      expect(checkboxInstance.indeterminate).toBe(false);\r\n    });\r\n\r\n    it('should preserve the user-provided id', () => {\r\n      expect(checkboxNativeElement.id).toBe('simple-check');\r\n    });\r\n\r\n    it('should project the checkbox content into the label element', () => {\r\n      let label = <HTMLLabelElement>checkboxNativeElement.querySelector('.md-checkbox-label');\r\n      expect(label.textContent.trim()).toBe('Simple checkbox');\r\n    });\r\n\r\n    it('should make the host element a tab stop', () => {\r\n      expect(inputElement.tabIndex).toBe(0);\r\n    });\r\n\r\n    it('should add a css class to end-align the checkbox', () => {\r\n      testComponent.alignment = 'end';\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-align-end');\r\n    });\r\n\r\n    it('should not trigger the click event multiple times', () => {\r\n      // By default, when clicking on a label element, a generated click will be dispatched\r\n      // on the associated input element.\r\n      // Since we're using a label element and a visual hidden input, this behavior can led\r\n      // to an issue, where the click events on the checkbox are getting executed twice.\r\n\r\n      spyOn(testComponent, 'onCheckboxClick');\r\n\r\n      expect(inputElement.checked).toBe(false);\r\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-checked');\r\n\r\n      labelElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-checked');\r\n      expect(inputElement.checked).toBe(true);\r\n\r\n      expect(testComponent.onCheckboxClick).toHaveBeenCalledTimes(1);\r\n    });\r\n\r\n    it('should trigger a change event when the native input does', async(() => {\r\n      spyOn(testComponent, 'onCheckboxChange');\r\n\r\n      expect(inputElement.checked).toBe(false);\r\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-checked');\r\n\r\n      labelElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(inputElement.checked).toBe(true);\r\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-checked');\r\n\r\n      // Wait for the fixture to become stable, because the EventEmitter for the change event,\r\n      // will only fire after the zone async change detection has finished.\r\n      fixture.whenStable().then(() => {\r\n        // The change event shouldn't fire, because the value change was not caused\r\n        // by any interaction.\r\n        expect(testComponent.onCheckboxChange).toHaveBeenCalledTimes(1);\r\n      });\r\n    }));\r\n\r\n    it('should not trigger the change event by changing the native value', async(() => {\r\n      spyOn(testComponent, 'onCheckboxChange');\r\n\r\n      expect(inputElement.checked).toBe(false);\r\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-checked');\r\n\r\n      testComponent.isChecked = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(inputElement.checked).toBe(true);\r\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-checked');\r\n\r\n      // Wait for the fixture to become stable, because the EventEmitter for the change event,\r\n      // will only fire after the zone async change detection has finished.\r\n      fixture.whenStable().then(() => {\r\n        // The change event shouldn't fire, because the value change was not caused\r\n        // by any interaction.\r\n        expect(testComponent.onCheckboxChange).not.toHaveBeenCalled();\r\n      });\r\n\r\n    }));\r\n\r\n    describe('state transition css classes', () => {\r\n      it('should transition unchecked -> checked -> unchecked', () => {\r\n        testComponent.isChecked = true;\r\n        fixture.detectChanges();\r\n        expect(checkboxNativeElement.classList).toContain('md-checkbox-anim-unchecked-checked');\r\n\r\n        testComponent.isChecked = false;\r\n        fixture.detectChanges();\r\n        expect(checkboxNativeElement.classList).not.toContain('md-checkbox-anim-unchecked-checked');\r\n        expect(checkboxNativeElement.classList).toContain('md-checkbox-anim-checked-unchecked');\r\n      });\r\n\r\n      it('should transition unchecked -> indeterminate -> unchecked', () => {\r\n        testComponent.isIndeterminate = true;\r\n        fixture.detectChanges();\r\n\r\n        expect(checkboxNativeElement.classList)\r\n            .toContain('md-checkbox-anim-unchecked-indeterminate');\r\n\r\n        testComponent.isIndeterminate = false;\r\n        fixture.detectChanges();\r\n\r\n        expect(checkboxNativeElement.classList)\r\n            .not.toContain('md-checkbox-anim-unchecked-indeterminate');\r\n        expect(checkboxNativeElement.classList)\r\n            .toContain('md-checkbox-anim-indeterminate-unchecked');\r\n      });\r\n\r\n      it('should transition indeterminate -> checked', () => {\r\n        testComponent.isIndeterminate = true;\r\n        fixture.detectChanges();\r\n\r\n        testComponent.isChecked = true;\r\n        fixture.detectChanges();\r\n\r\n        expect(checkboxNativeElement.classList).not.toContain(\r\n            'md-checkbox-anim-unchecked-indeterminate');\r\n        expect(checkboxNativeElement.classList).toContain('md-checkbox-anim-indeterminate-checked');\r\n      });\r\n\r\n      it('should not apply transition classes when there is no state change', () => {\r\n        testComponent.isChecked = checkboxInstance.checked;\r\n        fixture.detectChanges();\r\n        expect(checkboxNativeElement).not.toMatch(/^md\\-checkbox\\-anim/g);\r\n\r\n        testComponent.isIndeterminate = checkboxInstance.indeterminate;\r\n        expect(checkboxNativeElement).not.toMatch(/^md\\-checkbox\\-anim/g);\r\n      });\r\n\r\n      it('should not initially have any transition classes', () => {\r\n        expect(checkboxNativeElement).not.toMatch(/^md\\-checkbox\\-anim/g);\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('with change event and no initial value', () => {\r\n    let checkboxDebugElement: DebugElement;\r\n    let checkboxNativeElement: HTMLElement;\r\n    let checkboxInstance: MdCheckbox;\r\n    let testComponent: CheckboxWithChangeEvent;\r\n    let inputElement: HTMLInputElement;\r\n    let labelElement: HTMLLabelElement;\r\n\r\n    beforeEach(async(() => {\r\n      builder.createAsync(CheckboxWithChangeEvent).then(f => {\r\n        fixture = f;\r\n        fixture.detectChanges();\r\n\r\n        checkboxDebugElement = fixture.debugElement.query(By.directive(MdCheckbox));\r\n        checkboxNativeElement = checkboxDebugElement.nativeElement;\r\n        checkboxInstance = checkboxDebugElement.componentInstance;\r\n        testComponent = fixture.debugElement.componentInstance;\r\n        inputElement = <HTMLInputElement>checkboxNativeElement.querySelector('input');\r\n        labelElement = <HTMLLabelElement>checkboxNativeElement.querySelector('label');\r\n      });\r\n    }));\r\n\r\n    it('should emit the event to the change observable', () => {\r\n      let changeSpy = jasmine.createSpy('onChangeObservable');\r\n\r\n      checkboxInstance.change.subscribe(changeSpy);\r\n\r\n      fixture.detectChanges();\r\n      expect(changeSpy).not.toHaveBeenCalled();\r\n\r\n      // When changing the native `checked` property the checkbox will not fire a change event,\r\n      // because the element is not focused and it's not the native behavior of the input element.\r\n      labelElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(changeSpy).toHaveBeenCalledTimes(1);\r\n    });\r\n\r\n    it('should not emit a DOM event to the change output', async(() => {\r\n      fixture.detectChanges();\r\n      expect(testComponent.lastEvent).toBeUndefined();\r\n\r\n      // Trigger the click on the inputElement, because the input will probably\r\n      // emit a DOM event to the change output.\r\n      inputElement.click();\r\n      fixture.detectChanges();\r\n\r\n      fixture.whenStable().then(() => {\r\n        // We're checking the arguments type / emitted value to be a boolean, because sometimes the\r\n        // emitted value can be a DOM Event, which is not valid.\r\n        // See angular/angular#4059\r\n        expect(testComponent.lastEvent.checked).toBe(true);\r\n      });\r\n\r\n    }));\r\n  });\r\n\r\n  describe('with provided aria-label ', () => {\r\n    let checkboxDebugElement: DebugElement;\r\n    let checkboxNativeElement: HTMLElement;\r\n    let inputElement: HTMLInputElement;\r\n\r\n    it('should use the provided aria-label', async(() => {\r\n      builder.createAsync(CheckboxWithAriaLabel).then(f => {\r\n        fixture = f;\r\n        checkboxDebugElement = fixture.debugElement.query(By.directive(MdCheckbox));\r\n        checkboxNativeElement = checkboxDebugElement.nativeElement;\r\n        inputElement = <HTMLInputElement>checkboxNativeElement.querySelector('input');\r\n\r\n        fixture.detectChanges();\r\n        expect(inputElement.getAttribute('aria-label')).toBe('Super effective');\r\n      });\r\n    }));\r\n  });\r\n\r\n  describe('with provided aria-labelledby ', () => {\r\n    let checkboxDebugElement: DebugElement;\r\n    let checkboxNativeElement: HTMLElement;\r\n    let inputElement: HTMLInputElement;\r\n\r\n    it('should use the provided aria-labelledby', async(() => {\r\n      builder.createAsync(CheckboxWithAriaLabelledby).then(f => {\r\n        fixture = f;\r\n        checkboxDebugElement = fixture.debugElement.query(By.directive(MdCheckbox));\r\n        checkboxNativeElement = checkboxDebugElement.nativeElement;\r\n        inputElement = <HTMLInputElement>checkboxNativeElement.querySelector('input');\r\n\r\n        fixture.detectChanges();\r\n        expect(inputElement.getAttribute('aria-labelledby')).toBe('some-id');\r\n      });\r\n    }));\r\n\r\n    it('should not assign aria-labelledby if none is provided', async(() => {\r\n      builder.createAsync(SingleCheckbox).then(f => {\r\n        fixture = f;\r\n        checkboxDebugElement = fixture.debugElement.query(By.directive(MdCheckbox));\r\n        checkboxNativeElement = checkboxDebugElement.nativeElement;\r\n        inputElement = <HTMLInputElement>checkboxNativeElement.querySelector('input');\r\n\r\n        fixture.detectChanges();\r\n        expect(inputElement.getAttribute('aria-labelledby')).toBe(null);\r\n      });\r\n    }));\r\n  });\r\n\r\n  describe('with provided tabIndex', () => {\r\n    let checkboxDebugElement: DebugElement;\r\n    let checkboxNativeElement: HTMLElement;\r\n    let testComponent: CheckboxWithTabIndex;\r\n    let inputElement: HTMLInputElement;\r\n    let labelElement: HTMLLabelElement;\r\n\r\n    beforeEach(async(() => {\r\n      builder.createAsync(CheckboxWithTabIndex).then(f => {\r\n        fixture = f;\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.debugElement.componentInstance;\r\n        checkboxDebugElement = fixture.debugElement.query(By.directive(MdCheckbox));\r\n        checkboxNativeElement = checkboxDebugElement.nativeElement;\r\n        inputElement = <HTMLInputElement>checkboxNativeElement.querySelector('input');\r\n        labelElement = <HTMLLabelElement>checkboxNativeElement.querySelector('label');\r\n      });\r\n    }));\r\n\r\n    it('should preserve any given tabIndex', async(() => {\r\n      expect(inputElement.tabIndex).toBe(7);\r\n    }));\r\n\r\n    it('should preserve given tabIndex when the checkbox is disabled then enabled', () => {\r\n      testComponent.isDisabled = true;\r\n      fixture.detectChanges();\r\n\r\n      testComponent.customTabIndex = 13;\r\n      fixture.detectChanges();\r\n\r\n      testComponent.isDisabled = false;\r\n      fixture.detectChanges();\r\n\r\n      expect(inputElement.tabIndex).toBe(13);\r\n    });\r\n  });\r\n\r\n  describe('with multiple checkboxes', () => {\r\n    beforeEach(async(() => {\r\n      builder.createAsync(MultipleCheckboxes).then(f => {\r\n        fixture = f;\r\n        fixture.detectChanges();\r\n      });\r\n    }));\r\n\r\n    it('should assign a unique id to each checkbox', () => {\r\n      let [firstId, secondId] =\r\n          fixture.debugElement.queryAll(By.directive(MdCheckbox))\r\n          .map(debugElement => debugElement.nativeElement.querySelector('input').id);\r\n\r\n      expect(firstId).toBeTruthy();\r\n      expect(secondId).toBeTruthy();\r\n      expect(firstId).not.toEqual(secondId);\r\n    });\r\n  });\r\n\r\n  describe('with ngModel', () => {\r\n    beforeEach(async(() => {\r\n      builder.createAsync(CheckboxWithFormDirectives).then(f => {\r\n        f.detectChanges();\r\n        fixture = f;\r\n      });\r\n    }));\r\n\r\n    it('should be in pristine, untouched, and valid states initially', fakeAsync(() => {\r\n      flushMicrotasks();\r\n\r\n      let checkboxElement = fixture.debugElement.query(By.directive(MdCheckbox));\r\n      let ngControl = <NgControl> checkboxElement.injector.get(NgControl);\r\n\r\n      expect(ngControl.valid).toBe(true);\r\n      expect(ngControl.pristine).toBe(true);\r\n      expect(ngControl.touched).toBe(false);\r\n\r\n      // TODO(jelbourn): test that `touched` and `pristine` state are modified appropriately.\r\n      // This is currently blocked on issues with async() and fakeAsync().\r\n    }));\r\n  });\r\n\r\n  describe('with name attribute', () => {\r\n    beforeEach(async(() => {\r\n      builder.createAsync(CheckboxWithNameAttribute).then(f => {\r\n        f.detectChanges();\r\n        fixture = f;\r\n      });\r\n    }));\r\n\r\n    it('should forward name value to input element', fakeAsync(() => {\r\n      let checkboxElement = fixture.debugElement.query(By.directive(MdCheckbox));\r\n      let inputElement = <HTMLInputElement> checkboxElement.nativeElement.querySelector('input');\r\n\r\n      expect(inputElement.getAttribute('name')).toBe('test-name');\r\n    }));\r\n  });\r\n});\r\n\r\n/** Simple component for testing a single checkbox. */\r\n@Component({\r\n  directives: [MdCheckbox],\r\n  template: `\r\n  <div (click)=\"parentElementClicked = true\" (keyup)=\"parentElementKeyedUp = true\">    \r\n    <md-checkbox \r\n        id=\"simple-check\"\r\n        [align]=\"alignment\"\r\n        [checked]=\"isChecked\" \r\n        [indeterminate]=\"isIndeterminate\" \r\n        [disabled]=\"isDisabled\"\r\n        (change)=\"changeCount = changeCount + 1\"\r\n        (click)=\"onCheckboxClick($event)\"\r\n        (change)=\"onCheckboxChange($event)\">\r\n      Simple checkbox\r\n    </md-checkbox>\r\n  </div>`\r\n})\r\nclass SingleCheckbox {\r\n  alignment: string = 'start';\r\n  isChecked: boolean = false;\r\n  isIndeterminate: boolean = false;\r\n  isDisabled: boolean = false;\r\n  parentElementClicked: boolean = false;\r\n  parentElementKeyedUp: boolean = false;\r\n  lastKeydownEvent: Event = null;\r\n  changeCount: number = 0;\r\n\r\n  onCheckboxClick(event: Event) {}\r\n  onCheckboxChange(event: MdCheckboxChange) {}\r\n}\r\n\r\n/** Simple component for testing an MdCheckbox with ngModel. */\r\n@Component({\r\n  directives: [MdCheckbox, FORM_DIRECTIVES, NgModel],\r\n  template: `\r\n    <form>\r\n      <md-checkbox name=\"cb\" [(ngModel)]=\"isGood\">Be good</md-checkbox>\r\n    </form>\r\n  `,\r\n})\r\nclass CheckboxWithFormDirectives {\r\n  isGood: boolean = false;\r\n}\r\n\r\n/** Simple test component with multiple checkboxes. */\r\n@Component(({\r\n  directives: [MdCheckbox],\r\n  template: `\r\n    <md-checkbox>Option 1</md-checkbox>\r\n    <md-checkbox>Option 2</md-checkbox>\r\n  `\r\n}))\r\nclass MultipleCheckboxes { }\r\n\r\n\r\n/** Simple test component with tabIndex */\r\n@Component({\r\n  directives: [MdCheckbox],\r\n  template: `\r\n    <md-checkbox [tabindex]=\"customTabIndex\" [disabled]=\"isDisabled\">\r\n    </md-checkbox>`,\r\n})\r\nclass CheckboxWithTabIndex {\r\n  customTabIndex: number = 7;\r\n  isDisabled: boolean = false;\r\n}\r\n\r\n/** Simple test component with an aria-label set. */\r\n@Component({\r\n  directives: [MdCheckbox],\r\n  template: `<md-checkbox aria-label=\"Super effective\"></md-checkbox>`\r\n})\r\nclass CheckboxWithAriaLabel { }\r\n\r\n/** Simple test component with an aria-label set. */\r\n@Component({\r\n  directives: [MdCheckbox],\r\n  template: `<md-checkbox aria-labelledby=\"some-id\"></md-checkbox>`\r\n})\r\nclass CheckboxWithAriaLabelledby {}\r\n\r\n/** Simple test component with name attribute */\r\n@Component({\r\n  directives: [MdCheckbox],\r\n  template: `<md-checkbox name=\"test-name\"></md-checkbox>`\r\n})\r\nclass CheckboxWithNameAttribute {}\r\n\r\n/** Simple test component with change event */\r\n@Component({\r\n  directives: [MdCheckbox],\r\n  template: `<md-checkbox (change)=\"lastEvent = $event\"></md-checkbox>`\r\n})\r\nclass CheckboxWithChangeEvent {\r\n  lastEvent: MdCheckboxChange;\r\n}\r\n"]}