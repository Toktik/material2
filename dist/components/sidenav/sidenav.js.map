{"version":3,"file":"sidenav.js","sourceRoot":"","sources":["file:///C:/projects/material2/tmp/broccoli_type_script_compiler-input_base_path-2PVWyBBf.tmp/0/src/demo-app/components/sidenav/sidenav.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    AfterContentInit,\r\n    Component,\r\n    ContentChildren,\r\n    ElementRef,\r\n    HostBinding,\r\n    Input,\r\n    Optional,\r\n    Output,\r\n    QueryList,\r\n    ChangeDetectionStrategy,\r\n    EventEmitter,\r\n    Renderer\r\n} from '@angular/core';\r\nimport {NgStyle} from '@angular/common';\r\nimport {Dir} from '@angular2-material/core/rtl/dir';\r\nimport {PromiseCompleter} from '@angular2-material/core/async/promise-completer';\r\nimport {MdError} from '@angular2-material/core/errors/error';\r\nimport { BooleanFieldValue } from '@angular2-material/core/annotations/field-value';\r\n\r\n/** Exception thrown when two MdSidenav are matching the same side. */\r\nexport class MdDuplicatedSidenavError extends MdError {\r\n  constructor(align: string) {\r\n    super(`A sidenav was already declared for 'align=\"${align}\"'`);\r\n  }\r\n}\r\n\r\n/**\r\n * <md-sidenav> component.\r\n *\r\n * This component corresponds to the drawer of the sidenav.\r\n *\r\n * Please refer to README.md for examples on how to use it.\r\n */\r\n@Component({\r\n  selector: 'md-sidenav',\r\n  template: '<ng-content></ng-content>',\r\n  host: {\r\n    '(transitionend)': '_onTransitionEnd($event)',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MdSidenav {\r\n  /** Alignment of the sidenav (direction neutral); whether 'start' or 'end'. */\r\n  @Input() align: 'start' | 'end' = 'start';\r\n\r\n  /** Mode of the sidenav; whether 'over' or 'side'. */\r\n  @Input() mode: 'over' | 'push' | 'side' = 'over';\r\n\r\n  /** Whether the sidenav is opened. */\r\n  @Input('opened') @BooleanFieldValue() private _opened: boolean = false;\r\n\r\n  /** Event emitted when the sidenav is being opened. Use this to synchronize animations. */\r\n  @Output('open-start') onOpenStart = new EventEmitter<void>();\r\n\r\n  /** Event emitted when the sidenav is fully opened. */\r\n  @Output('open') onOpen = new EventEmitter<void>();\r\n\r\n  /** Event emitted when the sidenav is being closed. Use this to synchronize animations. */\r\n  @Output('close-start') onCloseStart = new EventEmitter<void>();\r\n\r\n  /** Event emitted when the sidenav is fully closed. */\r\n  @Output('close') onClose = new EventEmitter<void>();\r\n\r\n\r\n  /**\r\n   * @param _elementRef The DOM element reference. Used for transition and width calculation.\r\n   *     If not available we do not hook on transitions.\r\n   */\r\n  constructor(private _elementRef: ElementRef) {}\r\n\r\n  /**\r\n   * Whether the sidenav is opened. We overload this because we trigger an event when it\r\n   * starts or end.\r\n   */\r\n  get opened(): boolean { return this._opened; }\r\n  set opened(v: boolean) {\r\n    this.toggle(v);\r\n  }\r\n\r\n\r\n  /** Open this sidenav, and return a Promise that will resolve when it's fully opened (or get\r\n   * rejected if it didn't). */\r\n  open(): Promise<void> {\r\n    return this.toggle(true);\r\n  }\r\n\r\n  /**\r\n   * Close this sidenav, and return a Promise that will resolve when it's fully closed (or get\r\n   * rejected if it didn't).\r\n   */\r\n  close(): Promise<void> {\r\n    return this.toggle(false);\r\n  }\r\n\r\n  /**\r\n   * Toggle this sidenav. This is equivalent to calling open() when it's already opened, or\r\n   * close() when it's closed.\r\n   * @param isOpen\r\n   */\r\n  toggle(isOpen: boolean = !this.opened): Promise<void> {\r\n    // Shortcut it if we're already opened.\r\n    if (isOpen === this.opened) {\r\n      if (!this._transition) {\r\n        return Promise.resolve(null);\r\n      } else {\r\n        return isOpen ? this._openPromise : this._closePromise;\r\n      }\r\n    }\r\n\r\n    this._opened = isOpen;\r\n    this._transition = true;\r\n\r\n    if (isOpen) {\r\n      this.onOpenStart.emit(null);\r\n    } else {\r\n      this.onCloseStart.emit(null);\r\n    }\r\n\r\n    if (isOpen) {\r\n      if (this._openPromise == null) {\r\n        let completer = new PromiseCompleter<void>();\r\n        this._openPromise = completer.promise;\r\n        this._openPromiseReject = completer.reject;\r\n        this._openPromiseResolve = completer.resolve;\r\n      }\r\n      return this._openPromise;\r\n    } else {\r\n      if (this._closePromise == null) {\r\n        let completer = new PromiseCompleter<void>();\r\n        this._closePromise = completer.promise;\r\n        this._closePromiseReject = completer.reject;\r\n        this._closePromiseResolve = completer.resolve;\r\n      }\r\n      return this._closePromise;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * When transition has finished, set the internal state for classes and emit the proper event.\r\n   * The event passed is actually of type TransitionEvent, but that type is not available in\r\n   * Android so we use any.\r\n   */\r\n  _onTransitionEnd(transitionEvent: TransitionEvent) {\r\n    if (transitionEvent.target == this._elementRef.nativeElement\r\n        // Simpler version to check for prefixes.\r\n        && transitionEvent.propertyName.endsWith('transform')) {\r\n      this._transition = false;\r\n      if (this._opened) {\r\n        if (this._openPromise != null) {\r\n          this._openPromiseResolve();\r\n        }\r\n        if (this._closePromise != null) {\r\n          this._closePromiseReject();\r\n        }\r\n\r\n        this.onOpen.emit(null);\r\n      } else {\r\n        if (this._closePromise != null) {\r\n          this._closePromiseResolve();\r\n        }\r\n        if (this._openPromise != null) {\r\n          this._openPromiseReject();\r\n        }\r\n\r\n        this.onClose.emit(null);\r\n      }\r\n\r\n      this._openPromise = null;\r\n      this._closePromise = null;\r\n    }\r\n  }\r\n\r\n  @HostBinding('class.md-sidenav-closing') get _isClosing() {\r\n    return !this._opened && this._transition;\r\n  }\r\n  @HostBinding('class.md-sidenav-opening') get _isOpening() {\r\n    return this._opened && this._transition;\r\n  }\r\n  @HostBinding('class.md-sidenav-closed') get _isClosed() {\r\n    return !this._opened && !this._transition;\r\n  }\r\n  @HostBinding('class.md-sidenav-opened') get _isOpened() {\r\n    return this._opened && !this._transition;\r\n  }\r\n  @HostBinding('class.md-sidenav-end') get _isEnd() {\r\n    return this.align == 'end';\r\n  }\r\n  @HostBinding('class.md-sidenav-side') get _modeSide() {\r\n    return this.mode == 'side';\r\n  }\r\n  @HostBinding('class.md-sidenav-over') get _modeOver() {\r\n    return this.mode == 'over';\r\n  }\r\n  @HostBinding('class.md-sidenav-push') get _modePush() {\r\n    return this.mode == 'push';\r\n  }\r\n\r\n  /** TODO: internal (needed by MdSidenavLayout). */\r\n  get _width() {\r\n    if (this._elementRef.nativeElement) {\r\n      return this._elementRef.nativeElement.offsetWidth;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private _transition: boolean = false;\r\n  private _openPromise: Promise<void>;\r\n  private _openPromiseResolve: () => void;\r\n  private _openPromiseReject: () => void;\r\n  private _closePromise: Promise<void>;\r\n  private _closePromiseResolve: () => void;\r\n  private _closePromiseReject: () => void;\r\n}\r\n\r\n/**\r\n * <md-sidenav-layout> component.\r\n *\r\n * This is the parent component to one or two <md-sidenav>s that validates the state internally\r\n * and coordinate the backdrop and content styling.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-sidenav-layout',\r\n  // Do not use ChangeDetectionStrategy.OnPush. It does not work for this component because\r\n  // technically it is a sibling of MdSidenav (on the content tree) and isn't updated when MdSidenav\r\n  // changes its state.\r\n  directives: [MdSidenav, NgStyle],\r\n  templateUrl: 'sidenav.html',\r\n  styleUrls: [\r\n    'sidenav.css',\r\n    'sidenav-transitions.css',\r\n  ],\r\n})\r\nexport class MdSidenavLayout implements AfterContentInit {\r\n  @ContentChildren(MdSidenav) _sidenavs: QueryList<MdSidenav>;\r\n\r\n  get start() { return this._start; }\r\n  get end() { return this._end; }\r\n\r\n  /** The sidenav at the start/end alignment, independent of direction. */\r\n  private _start: MdSidenav;\r\n  private _end: MdSidenav;\r\n\r\n  /**\r\n   * The sidenav at the left/right. When direction changes, these will change as well.\r\n   * They're used as aliases for the above to set the left/right style properly.\r\n   * In LTR, _left == _start and _right == _end.\r\n   * In RTL, _left == _end and _right == _start.\r\n   */\r\n  private _left: MdSidenav;\r\n  private _right: MdSidenav;\r\n\r\n  constructor(@Optional() private _dir: Dir, private _element: ElementRef,\r\n              private _renderer: Renderer) {\r\n    // If a `Dir` directive exists up the tree, listen direction changes and update the left/right\r\n    // properties to point to the proper start/end.\r\n    if (_dir != null) {\r\n      _dir.dirChange.subscribe(() => this._validateDrawers());\r\n    }\r\n  }\r\n\r\n  /** TODO: internal */\r\n  ngAfterContentInit() {\r\n    // On changes, assert on consistency.\r\n    this._sidenavs.changes.subscribe(() => this._validateDrawers());\r\n    this._sidenavs.forEach((sidenav: MdSidenav) => this._watchSidenavToggle(sidenav));\r\n    this._validateDrawers();\r\n  }\r\n\r\n  /*\r\n  * Subscribes to sidenav events in order to set a class on the main layout element when the sidenav\r\n  * is open and the backdrop is visible. This ensures any overflow on the layout element is properly\r\n  * hidden.\r\n  */\r\n  private _watchSidenavToggle(sidenav: MdSidenav): void {\r\n    if (!sidenav || sidenav.mode === 'side') { return; }\r\n    sidenav.onOpen.subscribe(() => this._setLayoutClass(sidenav, true));\r\n    sidenav.onClose.subscribe(() => this._setLayoutClass(sidenav, false));\r\n  }\r\n\r\n  /* Toggles the 'md-sidenav-opened' class on the main 'md-sidenav-layout' element. */\r\n  private _setLayoutClass(sidenav: MdSidenav, bool: boolean): void {\r\n    this._renderer.setElementClass(this._element.nativeElement, 'md-sidenav-opened', bool);\r\n  }\r\n\r\n  /** Validate the state of the sidenav children components. */\r\n  private _validateDrawers() {\r\n    this._start = this._end = null;\r\n\r\n    // Ensure that we have at most one start and one end sidenav.\r\n    this._sidenavs.forEach(sidenav => {\r\n      if (sidenav.align == 'end') {\r\n        if (this._end != null) {\r\n          throw new MdDuplicatedSidenavError('end');\r\n        }\r\n        this._end = sidenav;\r\n      } else {\r\n        if (this._start != null) {\r\n          throw new MdDuplicatedSidenavError('start');\r\n        }\r\n        this._start = sidenav;\r\n      }\r\n    });\r\n\r\n    this._right = this._left = null;\r\n\r\n    // Detect if we're LTR or RTL.\r\n    if (this._dir == null || this._dir.value == 'ltr') {\r\n      this._left = this._start;\r\n      this._right = this._end;\r\n    } else {\r\n      this._left = this._end;\r\n      this._right = this._start;\r\n    }\r\n  }\r\n\r\n  _closeModalSidenav() {\r\n    if (this._start != null && this._start.mode != 'side') {\r\n      this._start.close();\r\n    }\r\n    if (this._end != null && this._end.mode != 'side') {\r\n      this._end.close();\r\n    }\r\n  }\r\n\r\n  _isShowingBackdrop(): boolean {\r\n    return (this._isSidenavOpen(this._start) && this._start.mode != 'side')\r\n        || (this._isSidenavOpen(this._end) && this._end.mode != 'side');\r\n  }\r\n\r\n  private _isSidenavOpen(side: MdSidenav): boolean {\r\n    return side != null && side.opened;\r\n  }\r\n\r\n  /**\r\n   * Return the width of the sidenav, if it's in the proper mode and opened.\r\n   * This may relayout the view, so do not call this often.\r\n   * @param sidenav\r\n   * @param mode\r\n   */\r\n  private _getSidenavEffectiveWidth(sidenav: MdSidenav, mode: string): number {\r\n    return (this._isSidenavOpen(sidenav) && sidenav.mode == mode) ? sidenav._width : 0;\r\n  }\r\n\r\n  _getMarginLeft() {\r\n    return this._getSidenavEffectiveWidth(this._left, 'side');\r\n  }\r\n\r\n  _getMarginRight() {\r\n    return this._getSidenavEffectiveWidth(this._right, 'side');\r\n  }\r\n\r\n  _getPositionLeft() {\r\n    return this._getSidenavEffectiveWidth(this._left, 'push');\r\n  }\r\n\r\n  _getPositionRight() {\r\n    return this._getSidenavEffectiveWidth(this._right, 'push');\r\n  }\r\n\r\n  /**\r\n   * Returns the horizontal offset for the content area.  There should never be a value for both\r\n   * left and right, so by subtracting the right value from the left value, we should always get\r\n   * the appropriate offset.\r\n   */\r\n  _getPositionOffset() {\r\n    return this._getPositionLeft() - this._getPositionRight();\r\n  }\r\n\r\n  /**\r\n   * This is using [ngStyle] rather than separate [style...] properties because [style.transform]\r\n   * doesn't seem to work right now.\r\n   */\r\n  _getStyles() {\r\n    return {\r\n      marginLeft: `${this._getMarginLeft()}px`,\r\n      marginRight: `${this._getMarginRight()}px`,\r\n      transform: `translate3d(${this._getPositionOffset()}px, 0, 0)`\r\n    };\r\n  }\r\n}\r\n\r\n\r\nexport const MD_SIDENAV_DIRECTIVES = [MdSidenavLayout, MdSidenav];\r\n"]}