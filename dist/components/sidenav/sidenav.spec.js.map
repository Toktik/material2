{"version":3,"file":"sidenav.spec.js","sourceRoot":"","sources":["file:///C:/projects/material2/tmp/broccoli_type_script_compiler-input_base_path-2PVWyBBf.tmp/0/src/demo-app/components/sidenav/sidenav.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,wBAKO,uBAAuB,CAAC,CAAA;AAC/B,wBAAqD,2BAA2B,CAAC,CAAA;AACjF,yBAAkB,mBAAmB,CAAC,CAAA;AACtC,qBAGO,eAAe,CAAC,CAAA;AAEvB,iCAAiB,2BAA2B,CAAC,CAAA;AAC7C,wBAAgE,WAAW,CAAC,CAAA;AAG5E;;GAEG;AACH,uBAAuB,OAAY,EAAE,OAA6B,EAC3C,QAAgB,EAAE,KAAa;IACpD,IAAI,OAAO,GAA0B,IAAI,CAAC;IAC1C,+DAA+D;IAC/D,OAAO;SACJ,YAAY,CAAC,yBAAe,EAAE,IAAI,mBAAY,CAAC;QAC9C,QAAQ,EAAE,QAAQ;QAClB,MAAM,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC;QACrB,UAAU,EAAE,CAAC,mBAAS,CAAC;KACxB,CAAC,CAAC;SACF,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,CAAwB;QACpD,OAAO,GAAG,CAAC,CAAC;IACd,CAAC,CAAC,CAAC;IACH,cAAI,EAAE,CAAC;IAEP,MAAM,CAAC,OAAO,CAAC;AACjB,CAAC;AAGD,8BAA8B,OAA8B;IAC1D,IAAI,OAAO,GAAQ,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,mBAAS,CAAC,CAAC,CAAC,iBAAiB,CAAC;IACzF,OAAO,CAAC,gBAAgB,CAAC;QACvB,MAAM,EAAQ,OAAQ,CAAC,WAAW,CAAC,aAAa;QAChD,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;IACH,OAAO,CAAC,aAAa,EAAE,CAAC;AAC1B,CAAC;AAGD,QAAQ,CAAC,WAAW,EAAE;IACpB,IAAI,QAAgB,CAAC;IACrB,IAAI,KAAa,CAAC;IAClB,IAAI,OAA6B,CAAC;IAClC,IAAI,GAAQ,CAAC;IAEb,UAAU,CAAC,gBAAM,CAAC,CAAC,8BAAoB,EAAE,cAAG,CAAC,EAAE,UAAC,GAAyB,EAAE,CAAM;QAC/E,OAAO,GAAG,GAAG,CAAC;QACd,GAAG,GAAG,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC;IAEJ;;;;;;OAMG;IACH,UAAU,CAAC,eAAK,CAAC;QACf,GAAG,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC;YACjD,QAAQ,GAAG,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;YAClD,KAAK,GAAG,GAAG,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC;IAEJ,QAAQ,CAAC,SAAS,EAAE;QAClB,EAAE,CAAC,kCAAkC,EAAE,mBAAS,CAAC;YAC/C,IAAI,OAAO,GAAG,aAAa,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEpE,IAAI,aAAa,GAAiB,OAAO,CAAC,YAAY,CAAC,iBAAiB,CAAC;YACzE,IAAI,iBAAiB,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACpE,iBAAiB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACxC,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,cAAI,EAAE,CAAC;YAEP,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAExC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC9B,cAAI,EAAE,CAAC;YAEP,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEzC,IAAI,cAAc,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;YACtE,IAAI,sBAAsB,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC;YACxF,MAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACrF,MAAM,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC;iBACtE,OAAO,CAAC,SAAS,CAAC,CAAC;YAEtB,YAAY;YACZ,IAAI,kBAAkB,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtE,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACzC,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,cAAI,EAAE,CAAC;YAEP,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEzC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC9B,cAAI,EAAE,CAAC;YAEP,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEzC,MAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpF,MAAM,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC9F,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,iEAAiE,EAAE,mBAAS,CAAC;YAC9E,IAAI,OAAO,GAAG,aAAa,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YACpE,IAAI,OAAO,GAAc,OAAO,CAAC,YAAY;iBAC1C,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,mBAAS,CAAC,CAAC,CAAC,iBAAiB,CAAC;YACpD,IAAI,MAAM,GAAG,KAAK,CAAC;YAEnB,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;gBAClB,MAAM,GAAG,IAAI,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC9B,cAAI,EAAE,CAAC;YACP,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE1B,MAAM,GAAG,KAAK,CAAC;YACf,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;gBACnB,MAAM,GAAG,IAAI,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC9B,cAAI,EAAE,CAAC;YACP,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE5B,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,6CAA6C,EAAE,mBAAS,CAAC;YAC1D,IAAI,OAAO,GAAG,aAAa,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YACpE,IAAI,OAAO,GAAc,OAAO,CAAC,YAAY;iBAC1C,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,mBAAS,CAAC,CAAC,CAAC,iBAAiB,CAAC;YAEpD,IAAI,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;YAC7B,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,cAAI,EAAE,CAAC;YAEP,OAAO,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;YAC1B,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtC,cAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,4DAA4D,EAAE,mBAAS,CAAC;YACzE,IAAI,OAAO,GAAG,aAAa,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YACpE,IAAI,OAAO,GAAc,OAAO,CAAC,YAAY;iBAC1C,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,mBAAS,CAAC,CAAC,CAAC,iBAAiB,CAAC;YAEpD,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,IAAI,aAAa,GAAG,KAAK,CAAC;YAC1B,IAAI,WAAW,GAAG,KAAK,CAAC;YAExB,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;gBAClB,UAAU,GAAG,IAAI,CAAC;YACpB,CAAC,EAAE;gBACD,aAAa,GAAG,IAAI,CAAC;YACvB,CAAC,CAAC,CAAC;YAEH,iDAAiD;YACjD,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;gBACnB,WAAW,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC9B,cAAI,EAAE,CAAC;YAEP,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/B,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,cAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,4DAA4D,EAAE,mBAAS,CAAC;YACzE,IAAI,OAAO,GAAG,aAAa,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YACpE,IAAI,OAAO,GAAc,OAAO,CAAC,YAAY;iBAC1C,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,mBAAS,CAAC,CAAC,CAAC,iBAAiB,CAAC;YAEpD,IAAI,WAAW,GAAG,KAAK,CAAC;YACxB,IAAI,cAAc,GAAG,KAAK,CAAC;YAC3B,IAAI,UAAU,GAAG,KAAK,CAAC;YAEvB,sCAAsC;YACtC,OAAO,CAAC,IAAI,EAAE,CAAC;YACf,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC9B,cAAI,EAAE,CAAC;YAEP,iCAAiC;YACjC,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;gBACnB,WAAW,GAAG,IAAI,CAAC;YACrB,CAAC,EAAE;gBACD,cAAc,GAAG,IAAI,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,gDAAgD;YAChD,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;gBAClB,UAAU,GAAG,IAAI,CAAC;YACpB,CAAC,CAAC,CAAC;YAEH,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC9B,cAAI,EAAE,CAAC;YAEP,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,MAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,cAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,+CAA+C,EAAE,mBAAS,CAAC;YAC5D,MAAM,CAAC;gBACL,IAAI,OAAO,GAAG,aAAa,CAAC,6BAA6B,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACrF,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,cAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,2DAA2D,EAAE,mBAAS,CAAC;YACxE,MAAM,CAAC;gBACL,IAAI,OAAO,GAAG,aAAa,CAAC,8BAA8B,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACtF,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,cAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,YAAY,EAAE;QAErB,EAAE,CAAC,uCAAuC,EAAE,mBAAS,CAAC;YACpD,IAAI,UAAU,GAAG,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,6LAK/B,CAAC,CAAC;YAE3B,IAAI,OAAO,GAAG,aAAa,CAAC,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YACvE,OAAO,CAAC,aAAa,EAAE,CAAC;YAExB,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAAC;YAE/E,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;YAC3D,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,sCAAsC,EAAE,mBAAS,CAAC;YACnD,IAAI,UAAU,GAAG,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,4LAK/B,CAAC,CAAC;YAE3B,IAAI,OAAO,GAAG,aAAa,CAAC,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YACvE,OAAO,CAAC,aAAa,EAAE,CAAC;YAExB,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAAC;YAE/E,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;YAC/D,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC,CAAC;IAEN,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC;AAGH,wEAAwE;AASxE;IAAA;IACA,CAAC;IATD;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,UAAU,EAAE,CAAC,+BAAqB,CAAC;YACnC,QAAQ,EAAE,yDAGT;SACF,CAAC;;qCAAA;IAEF,oCAAC;AAAD,CAAC,AADD,IACC;AAGD,wFAAwF;AAWxF;IAAA;IACA,CAAC;IAXD;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,UAAU,EAAE,CAAC,+BAAqB,CAAC;YACnC,QAAQ,EAAE,6HAKT;SACF,CAAC;;sCAAA;IAEF,qCAAC;AAAD,CAAC,AADD,IACC;AAGD,yEAAyE;AAkBzE;IAAA;QACE,mBAAc,GAAW,CAAC,CAAC;QAC3B,cAAS,GAAW,CAAC,CAAC;QACtB,oBAAe,GAAW,CAAC,CAAC;QAC5B,eAAU,GAAW,CAAC,CAAC;IAiBzB,CAAC;IAfC,gCAAS,GAAT;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,2BAAI,GAAJ;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,iCAAU,GAAV;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,4BAAK,GAAL;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IArCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,UAAU,EAAE,CAAC,+BAAqB,CAAC;YACnC,QAAQ,EAAE,mcAYT;SACF,CAAC;;oBAAA;IAsBF,mBAAC;AAAD,CAAC,AArBD,IAqBC","sourcesContent":["import {\r\n  fakeAsync,\r\n  async,\r\n  inject,\r\n  tick\r\n} from '@angular/core/testing';\r\nimport {TestComponentBuilder, ComponentFixture} from '@angular/compiler/testing';\r\nimport {XHR} from '@angular/compiler';\r\nimport {\r\n  Component,\r\n  ViewMetadata\r\n} from '@angular/core';\r\n\r\nimport {By} from '@angular/platform-browser';\r\nimport {MdSidenav, MdSidenavLayout, MD_SIDENAV_DIRECTIVES} from './sidenav';\r\n\r\n\r\n/**\r\n * Create a ComponentFixture from the builder. This takes a template and a style for sidenav.\r\n */\r\nfunction createFixture(appType: any, builder: TestComponentBuilder,\r\n                       template: string, style: string): ComponentFixture<any> {\r\n  let fixture: ComponentFixture<any> = null;\r\n  // Remove the styles (which remove the animations/transitions).\r\n  builder\r\n    .overrideView(MdSidenavLayout, new ViewMetadata({\r\n      template: template,\r\n      styles: [style || ''],\r\n      directives: [MdSidenav],\r\n    }))\r\n    .createAsync(appType).then((f: ComponentFixture<any>) => {\r\n    fixture = f;\r\n  });\r\n  tick();\r\n\r\n  return fixture;\r\n}\r\n\r\n\r\nfunction endSidenavTransition(fixture: ComponentFixture<any>) {\r\n  let sidenav: any = fixture.debugElement.query(By.directive(MdSidenav)).componentInstance;\r\n  sidenav._onTransitionEnd({\r\n    target: (<any>sidenav)._elementRef.nativeElement,\r\n    propertyName: 'transform'\r\n  });\r\n  fixture.detectChanges();\r\n}\r\n\r\n\r\ndescribe('MdSidenav', () => {\r\n  let template: string;\r\n  let style: string;\r\n  let builder: TestComponentBuilder;\r\n  let xhr: XHR;\r\n\r\n  beforeEach(inject([TestComponentBuilder, XHR], (tcb: TestComponentBuilder, x: XHR) => {\r\n    builder = tcb;\r\n    xhr = x;\r\n  }));\r\n\r\n  /**\r\n   * We need to get the template and styles for the sidenav in an Async test.\r\n   * FakeAsync would block indefinitely on the XHR if we were to create the component async-ly.\r\n   * See https://github.com/angular/angular/issues/5601.\r\n   * We do some style verification so styles have to match.\r\n   * But we remove the transitions so we only set the regular `sidenav.css` styling.\r\n   */\r\n  beforeEach(async(() => {\r\n    xhr.get('./components/sidenav/sidenav.html').then(t => {\r\n      template = t;\r\n    });\r\n    xhr.get('./components/sidenav/sidenav.css').then(css => {\r\n      style = css;\r\n    });\r\n  }));\r\n\r\n  describe('methods', () => {\r\n    it('should be able to open and close', fakeAsync(() => {\r\n      let fixture = createFixture(BasicTestApp, builder, template, style);\r\n\r\n      let testComponent: BasicTestApp = fixture.debugElement.componentInstance;\r\n      let openButtonElement = fixture.debugElement.query(By.css('.open'));\r\n      openButtonElement.nativeElement.click();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(testComponent.openStartCount).toBe(1);\r\n      expect(testComponent.openCount).toBe(0);\r\n\r\n      endSidenavTransition(fixture);\r\n      tick();\r\n\r\n      expect(testComponent.openStartCount).toBe(1);\r\n      expect(testComponent.openCount).toBe(1);\r\n      expect(testComponent.closeStartCount).toBe(0);\r\n      expect(testComponent.closeCount).toBe(0);\r\n\r\n      let sidenavElement = fixture.debugElement.query(By.css('md-sidenav'));\r\n      let sidenavBackdropElement = fixture.debugElement.query(By.css('.md-sidenav-backdrop'));\r\n      expect(getComputedStyle(sidenavElement.nativeElement).visibility).toEqual('visible');\r\n      expect(getComputedStyle(sidenavBackdropElement.nativeElement).visibility)\r\n        .toEqual('visible');\r\n\r\n      // Close it.\r\n      let closeButtonElement = fixture.debugElement.query(By.css('.close'));\r\n      closeButtonElement.nativeElement.click();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(testComponent.openStartCount).toBe(1);\r\n      expect(testComponent.openCount).toBe(1);\r\n      expect(testComponent.closeStartCount).toBe(1);\r\n      expect(testComponent.closeCount).toBe(0);\r\n\r\n      endSidenavTransition(fixture);\r\n      tick();\r\n\r\n      expect(testComponent.openStartCount).toBe(1);\r\n      expect(testComponent.openCount).toBe(1);\r\n      expect(testComponent.closeStartCount).toBe(1);\r\n      expect(testComponent.closeCount).toBe(1);\r\n\r\n      expect(getComputedStyle(sidenavElement.nativeElement).visibility).toEqual('hidden');\r\n      expect(getComputedStyle(sidenavBackdropElement.nativeElement).visibility).toEqual('hidden');\r\n    }));\r\n\r\n    it('open/close() return a promise that resolves after animation end', fakeAsync(() => {\r\n      let fixture = createFixture(BasicTestApp, builder, template, style);\r\n      let sidenav: MdSidenav = fixture.debugElement\r\n        .query(By.directive(MdSidenav)).componentInstance;\r\n      let called = false;\r\n\r\n      sidenav.open().then(() => {\r\n        called = true;\r\n      });\r\n\r\n      expect(called).toBe(false);\r\n      endSidenavTransition(fixture);\r\n      tick();\r\n      expect(called).toBe(true);\r\n\r\n      called = false;\r\n      sidenav.close().then(() => {\r\n        called = true;\r\n      });\r\n\r\n      expect(called).toBe(false);\r\n      endSidenavTransition(fixture);\r\n      tick();\r\n      expect(called).toBe(true);\r\n\r\n    }));\r\n\r\n    it('open/close() twice returns the same promise', fakeAsync(() => {\r\n      let fixture = createFixture(BasicTestApp, builder, template, style);\r\n      let sidenav: MdSidenav = fixture.debugElement\r\n        .query(By.directive(MdSidenav)).componentInstance;\r\n\r\n      let promise = sidenav.open();\r\n      expect(sidenav.open()).toBe(promise);\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      promise = sidenav.close();\r\n      expect(sidenav.close()).toBe(promise);\r\n      tick();\r\n    }));\r\n\r\n    it('open() then close() cancel animations when called too fast', fakeAsync(() => {\r\n      let fixture = createFixture(BasicTestApp, builder, template, style);\r\n      let sidenav: MdSidenav = fixture.debugElement\r\n        .query(By.directive(MdSidenav)).componentInstance;\r\n\r\n      let openCalled = false;\r\n      let openCancelled = false;\r\n      let closeCalled = false;\r\n\r\n      sidenav.open().then(() => {\r\n        openCalled = true;\r\n      }, () => {\r\n        openCancelled = true;\r\n      });\r\n\r\n      // We do not call transition end, close directly.\r\n      sidenav.close().then(() => {\r\n        closeCalled = true;\r\n      });\r\n\r\n      endSidenavTransition(fixture);\r\n      tick();\r\n\r\n      expect(openCalled).toBe(false);\r\n      expect(openCancelled).toBe(true);\r\n      expect(closeCalled).toBe(true);\r\n      tick();\r\n    }));\r\n\r\n    it('close() then open() cancel animations when called too fast', fakeAsync(() => {\r\n      let fixture = createFixture(BasicTestApp, builder, template, style);\r\n      let sidenav: MdSidenav = fixture.debugElement\r\n        .query(By.directive(MdSidenav)).componentInstance;\r\n\r\n      let closeCalled = false;\r\n      let closeCancelled = false;\r\n      let openCalled = false;\r\n\r\n      // First, open the sidenav completely.\r\n      sidenav.open();\r\n      endSidenavTransition(fixture);\r\n      tick();\r\n\r\n      // Then close and check behavior.\r\n      sidenav.close().then(() => {\r\n        closeCalled = true;\r\n      }, () => {\r\n        closeCancelled = true;\r\n      });\r\n      // We do not call transition end, open directly.\r\n      sidenav.open().then(() => {\r\n        openCalled = true;\r\n      });\r\n\r\n      endSidenavTransition(fixture);\r\n      tick();\r\n\r\n      expect(closeCalled).toBe(false);\r\n      expect(closeCancelled).toBe(true);\r\n      expect(openCalled).toBe(true);\r\n      tick();\r\n    }));\r\n\r\n    it('does not throw when created without a sidenav', fakeAsync(() => {\r\n      expect(() => {\r\n        let fixture = createFixture(SidenavLayoutNoSidenavTestApp, builder, template, style);\r\n        fixture.detectChanges();\r\n        tick();\r\n      }).not.toThrow();\r\n    }));\r\n\r\n    it('does throw when created with two sidenav on the same side', fakeAsync(() => {\r\n      expect(() => {\r\n        let fixture = createFixture(SidenavLayoutTwoSidenavTestApp, builder, template, style);\r\n        fixture.detectChanges();\r\n        tick();\r\n      }).toThrow();\r\n    }));\r\n  });\r\n\r\n  describe('attributes', () => {\r\n\r\n    it('should correctly parse opened=\"false\"', fakeAsync(() => {\r\n      let newBuilder = builder.overrideTemplate(BasicTestApp, `\r\n          <md-sidenav-layout>\r\n            <md-sidenav #sidenav mode=\"side\" opened=\"false\">\r\n              Closed Sidenav.\r\n            </md-sidenav>\r\n          </md-sidenav-layout>`);\r\n\r\n      let fixture = createFixture(BasicTestApp, newBuilder, template, style);\r\n      fixture.detectChanges();\r\n\r\n      let sidenavEl = fixture.debugElement.query(By.css('md-sidenav')).nativeElement;\r\n\r\n      expect(sidenavEl.classList).toContain('md-sidenav-closed');\r\n      expect(sidenavEl.classList).not.toContain('md-sidenav-opened');\r\n    }));\r\n\r\n    it('should correctly parse opened=\"true\"', fakeAsync(() => {\r\n      let newBuilder = builder.overrideTemplate(BasicTestApp, `\r\n          <md-sidenav-layout>\r\n            <md-sidenav #sidenav mode=\"side\" opened=\"true\">\r\n              Closed Sidenav.\r\n            </md-sidenav>\r\n          </md-sidenav-layout>`);\r\n\r\n      let fixture = createFixture(BasicTestApp, newBuilder, template, style);\r\n      fixture.detectChanges();\r\n\r\n      let sidenavEl = fixture.debugElement.query(By.css('md-sidenav')).nativeElement;\r\n\r\n      expect(sidenavEl.classList).not.toContain('md-sidenav-closed');\r\n      expect(sidenavEl.classList).toContain('md-sidenav-opened');\r\n    }));\r\n\r\n  });\r\n\r\n});\r\n\r\n\r\n/** Test component that contains an MdSidenavLayout but no MdSidenav. */\r\n@Component({\r\n  selector: 'test-app',\r\n  directives: [MD_SIDENAV_DIRECTIVES],\r\n  template: `\r\n    <md-sidenav-layout>\r\n    </md-sidenav-layout>\r\n  `,\r\n})\r\nclass SidenavLayoutNoSidenavTestApp {\r\n}\r\n\r\n\r\n/** Test component that contains an MdSidenavLayout and 2 MdSidenav on the same side. */\r\n@Component({\r\n  selector: 'test-app',\r\n  directives: [MD_SIDENAV_DIRECTIVES],\r\n  template: `\r\n    <md-sidenav-layout>\r\n      <md-sidenav> </md-sidenav>\r\n      <md-sidenav> </md-sidenav>\r\n    </md-sidenav-layout>\r\n  `,\r\n})\r\nclass SidenavLayoutTwoSidenavTestApp {\r\n}\r\n\r\n\r\n/** Test component that contains an MdSidenavLayout and one MdSidenav. */\r\n@Component({\r\n  selector: 'test-app',\r\n  directives: [MD_SIDENAV_DIRECTIVES],\r\n  template: `\r\n    <md-sidenav-layout>\r\n      <md-sidenav #sidenav align=\"start\"\r\n                  (open-start)=\"openStart()\"\r\n                  (open)=\"open()\"\r\n                  (close-start)=\"closeStart()\"\r\n                  (close)=\"close()\">\r\n        Content.\r\n      </md-sidenav>\r\n      <button (click)=\"sidenav.open()\" class=\"open\"></button>\r\n      <button (click)=\"sidenav.close()\" class=\"close\"></button>\r\n    </md-sidenav-layout>\r\n  `,\r\n})\r\nclass BasicTestApp {\r\n  openStartCount: number = 0;\r\n  openCount: number = 0;\r\n  closeStartCount: number = 0;\r\n  closeCount: number = 0;\r\n\r\n  openStart() {\r\n    this.openStartCount++;\r\n  }\r\n\r\n  open() {\r\n    this.openCount++;\r\n  }\r\n\r\n  closeStart() {\r\n    this.closeStartCount++;\r\n  }\r\n\r\n  close() {\r\n    this.closeCount++;\r\n  }\r\n}\r\n"]}