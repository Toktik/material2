{"version":3,"file":"menu.js","sourceRoot":"","sources":["file:///C:/projects/material2/tmp/broccoli_type_script_compiler-input_base_path-2PVWyBBf.tmp/0/src/demo-app/components/menu/menu.ts"],"names":[],"mappings":"AAAA,kDAAkD;AAClD,0CAA0C;AAC1C,mCAAmC;;;;;;;;;;;;;;AAEnC,qBASO,eAAe,CAAC,CAAA;AAEvB,4BAA6D,eAAe,CAAC,CAAA;AAW7E;IAWE,gBAAqC,IAAmB,EACnB,IAAmB;QAXhD,sBAAiB,GAAY,KAAK,CAAC;QAK3C,cAAS,GAAkB,OAAO,CAAC;QACnC,cAAS,GAAkB,OAAO,CAAC;QAwBzB,UAAK,GAAG,IAAI,mBAAY,CAAC;QAlBjC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAAC,CAAC;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAAC,CAAC;IACzC,CAAC;IASD,sBAAI,6BAAS;QAPb;;;;;WAKG;aAEH,UAAc,OAAe;YAC3B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,GAAQ,EAAE,SAAiB;gBACtE,GAAG,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;gBACtB,MAAM,CAAC,GAAG,CAAC;YACb,CAAC,EAAE,EAAE,CAAC,CAAC;QACT,CAAC;;;OAAA;IAID;;;;OAIG;IACH,iCAAgB,GAAhB,UAAiB,IAAa;QAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAEO,8BAAa,GAArB,UAAsB,GAAkB;QACtC,EAAE,CAAC,CAAE,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC;YACzC,MAAM,IAAI,oCAAsB,EAAE,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;IACvB,CAAC;IAEO,8BAAa,GAArB,UAAsB,GAAkB;QACtC,EAAE,CAAC,CAAE,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC;YACxC,MAAM,IAAI,oCAAsB,EAAE,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;IACvB,CAAC;IAEO,gCAAe,GAAvB;QACE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAjDD;QAAC,gBAAS,CAAC,kBAAW,CAAC;;+CAAA;IAcvB;QAAC,YAAK,CAAC,OAAO,CAAC;;;2CAAA;IAQf;QAAC,aAAM,EAAE;;yCAAA;IAxCX;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,SAAS;YACnB,IAAI,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC;YACtB,WAAW,EAAE,WAAW;YACxB,SAAS,EAAE,CAAC,UAAU,CAAC;YACvB,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,QAAQ;SACnB,CAAC;mBAYa,gBAAS,CAAC,YAAY,CAAC;mBACvB,gBAAS,CAAC,YAAY,CAAC;;cAbpC;IA4DF,aAAC;AAAD,CAAC,AA3DD,IA2DC;AA3DY,cAAM,SA2DlB,CAAA","sourcesContent":["// TODO(kara): keyboard events for menu navigation\r\n// TODO(kara): prevent-close functionality\r\n// TODO(kara): set position of menu\r\n\r\nimport {\r\n    Attribute,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    TemplateRef,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {MdMenuInvalidPositionX, MdMenuInvalidPositionY} from './menu-errors';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-menu',\r\n  host: {'role': 'menu'},\r\n  templateUrl: 'menu.html',\r\n  styleUrls: ['menu.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'mdMenu'\r\n})\r\nexport class MdMenu {\r\n  private _showClickCatcher: boolean = false;\r\n\r\n  // config object to be passed into the menu's ngClass\r\n  private _classList: Object;\r\n\r\n  positionX: MenuPositionX = 'after';\r\n  positionY: MenuPositionY = 'below';\r\n\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n  constructor(@Attribute('x-position') posX: MenuPositionX,\r\n              @Attribute('y-position') posY: MenuPositionY) {\r\n    if (posX) { this._setPositionX(posX); }\r\n    if (posY) { this._setPositionY(posY); }\r\n  }\r\n\r\n  /**\r\n   * This method takes classes set on the host md-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @param classes list of class names\r\n   */\r\n  @Input('class')\r\n  set classList(classes: string) {\r\n    this._classList = classes.split(' ').reduce((obj: any, className: string) => {\r\n      obj[className] = true;\r\n      return obj;\r\n    }, {});\r\n  }\r\n\r\n  @Output() close = new EventEmitter;\r\n\r\n  /**\r\n   * This function toggles the display of the menu's click catcher element.\r\n   * This element covers the viewport when the menu is open to detect clicks outside the menu.\r\n   * TODO: internal\r\n   */\r\n  _setClickCatcher(bool: boolean): void {\r\n    this._showClickCatcher = bool;\r\n  }\r\n\r\n  private _setPositionX(pos: MenuPositionX): void {\r\n    if ( pos !== 'before' && pos !== 'after') {\r\n      throw new MdMenuInvalidPositionX();\r\n    }\r\n    this.positionX = pos;\r\n  }\r\n\r\n  private _setPositionY(pos: MenuPositionY): void {\r\n    if ( pos !== 'above' && pos !== 'below') {\r\n      throw new MdMenuInvalidPositionY();\r\n    }\r\n    this.positionY = pos;\r\n  }\r\n\r\n  private _emitCloseEvent(): void {\r\n    this.close.emit(null);\r\n  }\r\n}\r\n\r\n"]}