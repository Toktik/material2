{"version":3,"file":"menu-item.js","sourceRoot":"","sources":["file:///C:/projects/material2/tmp/broccoli_type_script_compiler-input_base_path-2PVWyBBf.tmp/0/src/demo-app/components/menu/menu-item.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA4C,eAAe,CAAC,CAAA;AAE5D;;;GAGG;AAKH;IAAA;IAAyB,CAAC;IAJ1B;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,IAAI,EAAE,EAAC,MAAM,EAAE,UAAU,EAAC;SAC3B,CAAC;;kBAAA;IACuB,iBAAC;AAAD,CAAC,AAA1B,IAA0B;AAAb,kBAAU,aAAG,CAAA;AAE1B;;;GAGG;AAQH;IAAA;IA6BA,CAAC;IAxBC,sBAAI,kCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,SAAS,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAC1E,CAAC;;;OAJA;IAOD,sBAAI,wCAAc;aAAlB;YACE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;;;OAAA;IAGD,sBAAI,kCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC;;;OAAA;IAED,oCAAa,GAAb,UAAc,KAAY;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IAzBD;QAAC,kBAAW,CAAC,eAAe,CAAC;QAC5B,YAAK,EAAE;;gDAAA;IASR;QAAC,kBAAW,CAAC,oBAAoB,CAAC;;sDAAA;IAKlC;QAAC,kBAAW,CAAC,UAAU,CAAC;;gDAAA;IAzB1B;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,IAAI,EAAE;gBACJ,MAAM,EAAE,UAAU;gBAClB,SAAS,EAAE,uBAAuB;aACnC;SACF,CAAC;;oBAAA;IA8BF,mBAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,oBAAY,eA6BxB,CAAA","sourcesContent":["import {Directive, Input, HostBinding} from '@angular/core';\r\n\r\n/**\r\n * This directive is intended to be used inside an md-menu tag.\r\n * It exists mostly to set the role attribute.\r\n */\r\n@Directive({\r\n  selector: 'button[md-menu-item]',\r\n  host: {'role': 'menuitem'}\r\n})\r\nexport class MdMenuItem {}\r\n\r\n/**\r\n * This directive is intended to be used inside an md-menu tag.\r\n * It sets the role attribute and adds support for the disabled property to anchors.\r\n */\r\n@Directive({\r\n  selector: 'a[md-menu-item]',\r\n  host: {\r\n    'role': 'menuitem',\r\n    '(click)': 'checkDisabled($event)'\r\n  }\r\n})\r\nexport class MdMenuAnchor {\r\n  _disabled: boolean;\r\n\r\n  @HostBinding('attr.disabled')\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    this._disabled = (value === false || value === undefined) ? null : true;\r\n  }\r\n\r\n  @HostBinding('attr.aria-disabled')\r\n  get isAriaDisabled(): string {\r\n    return String(this.disabled);\r\n  }\r\n\r\n  @HostBinding('tabIndex')\r\n  get tabIndex(): number {\r\n    return this.disabled ? -1 : 0;\r\n  }\r\n\r\n  checkDisabled(event: Event) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n"]}