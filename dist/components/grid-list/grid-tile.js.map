{"version":3,"file":"grid-tile.js","sourceRoot":"","sources":["file:///C:/projects/material2/tmp/broccoli_type_script_compiler-input_base_path-2PVWyBBf.tmp/0/src/demo-app/components/grid-list/grid-tile.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBASO,eAAe,CAAC,CAAA;AACvB,qBAAqC,mCAAmC,CAAC,CAAA;AACzE,kCAA6B,qBAAqB,CAAC,CAAA;AAUnD;IAIE,oBAAoB,SAAmB,EAAU,QAAoB;QAAjD,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAY;QAHrE,aAAQ,GAAW,CAAC,CAAC;QACrB,aAAQ,GAAW,CAAC,CAAC;IAEmD,CAAC;IAGzE,sBAAI,+BAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAOD,UAAY,KAAK;YACf,IAAI,CAAC,QAAQ,GAAG,kCAAc,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;;;OATA;IAGD,sBAAI,+BAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAMD,UAAY,KAAK;YACf,IAAI,CAAC,QAAQ,GAAG,kCAAc,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;;;OARA;IAUD;;;OAGG;IACH,8BAAS,GAAT,UAAU,QAAgB,EAAE,KAAa;QACvC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC/E,CAAC;IAxBD;QAAC,YAAK,EAAE;;6CAAA;IAKR;QAAC,YAAK,EAAE;;6CAAA;IAnBV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,cAAc;YACxB,IAAI,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE;YAC5B,WAAW,EAAE,gBAAgB;YAC7B,SAAS,EAAE,CAAC,eAAe,CAAC;YAC5B,aAAa,EAAE,wBAAiB,CAAC,IAAI;SACtC,CAAC;;kBAAA;IAiCF,iBAAC;AAAD,CAAC,AAhCD,IAgCC;AAhCY,kBAAU,aAgCtB,CAAA;AAOD;IAQE,wBAAoB,SAAmB,EAAU,QAAoB;QAAjD,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAY;IAAG,CAAC;IAEzE,2CAAkB,GAAlB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,mBAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClF,CAAC;IAND;QAAC,sBAAe,CAAC,aAAM,CAAC;;kDAAA;IAX1B;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,0CAA0C;YACpD,WAAW,EAAE,qBAAqB;SACnC,CAAC;;sBAAA;IAcF,qBAAC;AAAD,CAAC,AAbD,IAaC;AAbY,sBAAc,iBAa1B,CAAA","sourcesContent":["import {\r\n  Component,\r\n  ViewEncapsulation,\r\n  Renderer,\r\n  ElementRef,\r\n  Input,\r\n  ContentChildren,\r\n  QueryList,\r\n  AfterContentInit\r\n} from '@angular/core';\r\nimport { MdLine, MdLineSetter } from '@angular2-material/core/line/line';\r\nimport {coerceToNumber} from './grid-list-measure';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-grid-tile',\r\n  host: { 'role': 'listitem' },\r\n  templateUrl: 'grid-tile.html',\r\n  styleUrls: ['grid-list.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MdGridTile {\r\n  _rowspan: number = 1;\r\n  _colspan: number = 1;\r\n\r\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\r\n\r\n  @Input()\r\n  get rowspan() {\r\n    return this._rowspan;\r\n  }\r\n\r\n  @Input()\r\n  get colspan() {\r\n    return this._colspan;\r\n  }\r\n\r\n  set rowspan(value) {\r\n    this._rowspan = coerceToNumber(value);\r\n  }\r\n\r\n  set colspan(value) {\r\n    this._colspan = coerceToNumber(value);\r\n  }\r\n\r\n  /**\r\n   * Sets the style of the grid-tile element.  Needs to be set manually to avoid\r\n   * \"Changed after checked\" errors that would occur with HostBinding.\r\n   */\r\n  _setStyle(property: string, value: string): void {\r\n    this._renderer.setElementStyle(this._element.nativeElement, property, value);\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-grid-tile-header, md-grid-tile-footer',\r\n  templateUrl: 'grid-tile-text.html'\r\n})\r\nexport class MdGridTileText implements AfterContentInit {\r\n  /**\r\n   *  Helper that watches the number of lines in a text area and sets\r\n   * a class on the host element that matches the line count.\r\n   */\r\n  _lineSetter: MdLineSetter;\r\n  @ContentChildren(MdLine) _lines: QueryList<MdLine>;\r\n\r\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\r\n\r\n  ngAfterContentInit() {\r\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\r\n  }\r\n}\r\n\r\n"]}