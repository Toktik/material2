{"version":3,"file":"overlay-demo.js","sourceRoot":"","sources":["file:///C:/projects/material2/tmp/broccoli_type_script_compiler-input_base_path-2PVWyBBf.tmp/0/src/demo-app/overlay/overlay-demo.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    Component,\r\n    ViewChildren,\r\n    QueryList,\r\n    ViewEncapsulation,\r\n    ViewChild,\r\n    ViewContainerRef\r\n} from '@angular/core';\r\nimport {NgIf} from '@angular/common';\r\nimport {\r\n    Overlay,\r\n    OverlayState,\r\n    OverlayOrigin,\r\n    OVERLAY_PROVIDERS,\r\n    OVERLAY_DIRECTIVES,\r\n    ComponentPortal,\r\n    Portal,\r\n    PORTAL_DIRECTIVES,\r\n    TemplatePortalDirective\r\n} from '@angular2-material/core/core';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'overlay-demo',\r\n  templateUrl: 'overlay-demo.html',\r\n  styleUrls: ['overlay-demo.css'],\r\n  directives: [PORTAL_DIRECTIVES, OVERLAY_DIRECTIVES, NgIf],\r\n  providers: [OVERLAY_PROVIDERS],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class OverlayDemo {\r\n  nextPosition: number = 0;\r\n  isMenuOpen: boolean = false;\r\n\r\n  @ViewChildren(TemplatePortalDirective) templatePortals: QueryList<Portal<any>>;\r\n  @ViewChild(OverlayOrigin) _overlayOrigin: OverlayOrigin;\r\n\r\n  constructor(public overlay: Overlay, public viewContainerRef: ViewContainerRef) { }\r\n\r\n  openRotiniPanel() {\r\n    let config = new OverlayState();\r\n\r\n    config.positionStrategy = this.overlay.position()\r\n        .global()\r\n        .left(`${this.nextPosition}px`)\r\n        .top(`${this.nextPosition}px`);\r\n\r\n    this.nextPosition += 30;\r\n\r\n    this.overlay.create(config).then(ref => {\r\n      ref.attach(new ComponentPortal(RotiniPanel, this.viewContainerRef));\r\n    });\r\n  }\r\n\r\n  openFusilliPanel() {\r\n    let config = new OverlayState();\r\n\r\n    config.positionStrategy = this.overlay.position()\r\n        .global()\r\n        .centerHorizontally()\r\n        .top(`${this.nextPosition}px`);\r\n\r\n    this.nextPosition += 30;\r\n\r\n    this.overlay.create(config).then(ref => {\r\n      ref.attach(this.templatePortals.first);\r\n    });\r\n  }\r\n\r\n  openSpaghettiPanel() {\r\n    // TODO(jelbourn): separate overlay demo for connected positioning.\r\n    let strategy = this.overlay.position()\r\n        .connectedTo(\r\n            this._overlayOrigin.elementRef,\r\n            {originX: 'start', originY: 'bottom'},\r\n            {overlayX: 'start', overlayY: 'top'} );\r\n\r\n    let config = new OverlayState();\r\n    config.positionStrategy = strategy;\r\n\r\n    this.overlay.create(config).then(ref => {\r\n      ref.attach(new ComponentPortal(SpagettiPanel, this.viewContainerRef));\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple component to load into an overlay */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'rotini-panel',\r\n  template: '<p class=\"demo-rotini\">Rotini {{value}}</p>'\r\n})\r\nclass RotiniPanel {\r\n  value: number = 9000;\r\n}\r\n\r\n/** Simple component to load into an overlay */\r\n@Component({\r\n  selector: 'spagetti-panel',\r\n  template: '<div class=\"demo-spagetti\">Spagetti {{value}}</div>'\r\n})\r\nclass SpagettiPanel {\r\n  value: string = 'Omega';\r\n}\r\n"]}